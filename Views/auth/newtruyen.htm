<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BOOKHUB</title>
    <link rel="stylesheet" href="/Static/style/index/dropdown.css" />
    <link rel="stylesheet" href="/Static/style/auther/homeauth.css" />
    <link rel="stylesheet" href="/Static/style/auther/navauth.css" />
    <link rel="stylesheet" href="/Static/style/auther/newtruyen.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
  </head>
  <body>
    <!-- Header -->
    <header>
      <nav class="navbar">
        <li class="logo">
          <a href="/Views/homepage/index.html">
            <img src="/Static/imagines/logo.png" alt="Logo" class="nav-logo" />
          </a>
        </li>
        <li class="dropdown">
          <a href="#">
            <i class="fa-solid fa-user"></i>
            <span id="user-name">Tài Khoản</span>
          </a>
          <ul class="dropdown-menu">
            <li><a href="/Views/homepage/login.html">Đăng Xuất</a></li>
            <li><a href="/Views/auth/newtruyen.htm">Thêm Truyện Mới</a></li>
            <li><a href="/Views/auth/listtruyen.html">Danh Sách Truyện</a></li>
          </ul>
        </li>
      </nav>
    </header>
    <!-- Nội dung chính -->
    <div class="form-container">
      <form id="create-book-form">
        <div class="form-left">
          <label for="upload-image">Chọn ảnh bìa</label>
          <input type="file" id="upload-image" accept="image/*" />
          <div id="image-preview"></div>
        </div>

        <div class="form-group">
          <label for="ten-truyen">Tên truyện</label>
          <input
            type="text"
            id="ten-truyen"
            name="ten-truyen"
            placeholder="Nhập tên truyện"
          />
        </div>

        <div class="form-group">
          <label for="gioi-thieu">Giới thiệu</label>
          <textarea
            id="gioi-thieu"
            name="gioi-thieu"
            placeholder="Nhập giới thiệu"
          ></textarea>
        </div>

        <div class="form-group">
          <label for="ten-tac-gia">Tên tác giả</label>
          <input
            type="text"
            id="ten-tac-gia"
            name="ten-tac-gia"
            placeholder="Nhập tên tác giả"
          />
        </div>

        <div class="form-group">
          <label for="category-dropdown">Thể loại</label>
          <select id="category-dropdown" name="the-loai">
            <option value="" disabled selected>Vui lòng chọn</option>
            <!-- Các tùy chọn sẽ được thêm động từ JavaScript -->
          </select>
        </div>

        <button type="button" onclick="saveBookWithAvatar()">Tạo Truyện</button>
      </form>
    </div>

    <script>
      async function fetchUserInfo() {
        const token = localStorage.getItem("token");

        if (token) {
          // Giải mã token để lấy thông tin user
          const decodedToken = jwt_decode(token);
          const userID = decodedToken.sub; // Giả sử userID lưu trong trường `sub` của token

          console.log("User ID:", userID);

          // Tiến hành gửi dữ liệu với userID
          fetch("http://localhost:8081/protected/profile", {
            method: "POST",
            headers: {
              Authorization: "Bearer " + token,
            },
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              console.log("Upload successful:", data);
            })
            .catch((error) => {
              console.error("Error uploading:", error);
            });
        } else {
          console.log("User not logged in");
        }
      }
      async function loadCategories() {
        try {
          const response = await fetch("http://localhost:8081/api/genre");
          const genres = await response.json(); // API trả về danh sách thể loại

          const dropdown = document.getElementById("category-dropdown");

          // Xóa các option cũ (nếu có)
          dropdown.innerHTML =
            '<option value="" disabled selected>Vui lòng chọn</option>';

          // Duyệt qua danh sách thể loại và thêm vào dropdown
          genres.forEach((genre) => {
            const option = document.createElement("option");
            option.value = genre.ID; // ID của thể loại
            option.textContent = genre.Name; // Tên thể loại
            dropdown.appendChild(option);
          });
        } catch (error) {
          console.error("Lỗi khi tải thể loại:", error);
        }
      }

      // Gọi hàm khi DOM sẵn sàng
      document.addEventListener("DOMContentLoaded", loadCategories);
      // tạo sách mới
      async function saveBookWithAvatar() {
        const name = document.getElementById("ten-truyen").value.trim();
        const description = document.getElementById("gioi-thieu").value.trim();
        const author = document.getElementById("ten-tac-gia").value.trim();
        const genreId = document.getElementById("category-dropdown").value;
        const file = document.getElementById("upload-image").files[0];

        // Lấy token từ localStorage và giải mã
        const token = localStorage.getItem("token");
        if (!token) {
          alert("Bạn cần đăng nhập trước khi thêm truyện!");
          return;
        }

        let userID;
        try {
          const decodedToken = jwt_decode(token);
          userID = decodedToken.sub; // Lấy userID từ trường `sub` trong token
        } catch (error) {
          alert("Lỗi xác thực người dùng!");
          console.error("JWT Decode Error:", error);
          return;
        }

        if (!name || !author || !genreId) {
          alert("Vui lòng điền đầy đủ thông tin bắt buộc!");
          return;
        }

        const formData = new FormData();
        formData.append("name", name);
        formData.append("description", description);
        formData.append("author", author);
        formData.append("genreid", genreId);
        formData.append("user_id", userID); // Thêm userID vào form data
        if (file) {
          formData.append("avatar", file);
        }

        try {
          const response = await fetch(
            "http://localhost:8081/protected/upload",
            {
              method: "POST",
              headers: {
                Authorization: `Bearer ${token}`, // Thêm Authorization header
              },
              body: formData,
            }
          );

          const data = await response.json();
          if (!response.ok) {
            throw new Error(data.error || "Failed to save book");
          }

          alert("Truyện đã được lưu thành công!");
          console.log("Saved book:", data);
          window.location.reload(); // Tải lại trang
        } catch (error) {
          console.error("Error saving book:", error);
          alert(`Lỗi: ${error.message}`);
        }
      }
    </script>
    <!-- Link JavaScript -->
    <script src="/Static/smooth/common.js"></script>
    <script src="/Static/smooth/addanh.js"></script>
    <script src="/Static/smooth/dropdown.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jwt-decode@3.1.2/build/jwt-decode.min.js"></script>
  </body>
</html>
